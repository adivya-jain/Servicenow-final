<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1801001_event_ma.EventUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>EventUtils</name>
        <script><![CDATA[var EventUtils = Class.create();
EventUtils.prototype = {
	initialize: function (eventId) {
		this.id = eventId;
		this.eventRecord = new GlideRecord('x_1801001_event_ma_event');
		this.attendee = new GlideRecord('x_1801001_event_ma_attendee');
		this.eventTask = new GlideRecord('x_1801001_event_ma_task');
		this.vendor = new GlideRecord('x_1801001_event_ma_vendor');
		this.feedback = new GlideRecord('x_1801001_event_ma_feedback');

	},

	fetchEventDetailsByEventId: function () {
		if (this.eventRecord.get(this.id)) {
			var results = {
				event_num: this.eventRecord.getValue('number'),
				event_name: this.eventRecord.getValue('x_event_name'),
				event_date: this.eventRecord.getValue('x_event_date'),
				event_loc: this.eventRecord.getDisplayValue('x_location'),
				event_vip: this.eventRecord.getValue('x_vip'),
				event_sta: this.eventRecord.getValue('x_status'),
				event_con_per: this.eventRecord.getValue('x_contact_person'),
				event_con_num: this.eventRecord.getValue('x_contact_number'),
				event_email: this.eventRecord.getValue('x_email')
			};
			return results;
		}
		else {
			return null;
		}
	},

	checkIfVip: function () {
		if (this.eventRecord.get(this.id)) {
			if (this.eventRecord.x_vip == true) {
				return true;
			}
			else {
				return false;
			}
		}
	},

	getRemainingBudget: function () {
		var budget = new GlideRecord('x_1801001_event_ma_budget');
		budget.addQuery('x_event_id', this.id);
		budget.query();
		sum_total_budget = 0;
		total_amount_spent = 0;
		while (budget.next()) {
			sum_total_budget += parseFloat(budget.getValue('x_total_budget'));
			total_amount_spent += parseFloat(budget.getValue('x_amount_spent'));
		}

		return sum_total_budget - total_amount_spent;
	},

	fetchEventTasks: function () {
		this.eventTask.addQuery('x_event_id', this.id);
		this.eventTask.query();
		if (this.eventTask.next()) {
			return this.eventTask;
		}
		else {
			return null;
		}
	},

	fetchEventAttendees: function () {
		this.attendee.addQuery('x_event_id', this.id);
		this.attendee.query();
		if (this.attendee.next()) {
			return this.attendee;
		}
		else {
			return null;
		}
	},

	fetchEventVendors: function () {
		this.vendor.addQuery('x_event_id', this.id);
		this.vendor.query();
		if (this.vendor.next()) {
			return this.vendor;
		}
		else {
			return null;
		}
	},

	fetchEventBudgetDetails: function () {
		var budget = new GlideRecord('x_1801001_event_ma_budget');
		budget.addQuery('x_event_id', this.id);
		budget.query();
		var budgets = [];
		while (budget.next()) {
			budgets.push({
				bud_num: budget.getValue('number'),
				bud_tot_am: budget.getValue('x_total_amount'),
				bud_am_sp: budget.getValue('x_amount_spent'),
				bud_remain: budget.getValue('x_amount_remaining'),
				bud_sys_id: budget.getUniqueValue()
			});
		}
		return budgets;
	},

	getEventFeedback: function () {
		this.feedback.addQuery('x_event_id', this.id);
		this.feedback.query();
		if (this.feedback.next()) {
			var feedbackList = [];
			while (this.feedback.next()) {
				feedbackList.push({
					f_rating: this.feedback.getValue('x_rating'),
					f_comments: this.feedback.getValue('x_comments')
				});
			}
			return feedbackList;
		}
	},


	type: 'EventUtils'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-05 20:33:52</sys_created_on>
        <sys_id>6dd381ff9343e610ca45fcf08bba104b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>EventUtils</sys_name>
        <sys_package display_value="Event Management &amp;amp; Planning System" source="x_1801001_event_ma">0a4cbcdb938b2610ca45fcf08bba1091</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Event Management &amp;amp; Planning System">0a4cbcdb938b2610ca45fcf08bba1091</sys_scope>
        <sys_update_name>sys_script_include_6dd381ff9343e610ca45fcf08bba104b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-05 20:33:52</sys_updated_on>
    </sys_script_include>
</record_update>
